{"version":3,"sources":["types.ts","Components/ParamsLoader.tsx","Components/ParamsEditor.tsx","Components/PermalinkPrinter.tsx","Components/SignatureCollector.tsx","Components/TransactionCreator.tsx","Viewer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ParamsKeys","defaultParams","maxExtraDataSize","maxAssetSchemeMetadataSize","maxTransferMetadataSize","maxTextContentSize","networkId","minPayTransactionCost","minSetRegularKeyTransactionCost","minCreateShardTransactionCost","minSetShardOwnersTransactionCost","minSetShardUsersTransactionCost","minWrapCccTransactionCost","minCustomTransactionCost","minStoreTransactionCost","minRemoveTransactionCost","minAssetMintCost","minAssetTransferCost","minAssetSchemeChangeCost","minAssetSupplyIncreaseCost","minAssetComposeCost","minAssetDecomposeCost","minAssetUnwrapCccCost","maxBodySize","snapshotPeriod","termSeconds","nominationExpiration","custodyPeriod","releasePeriod","maxNumOfValidators","minNumOfValidators","delegationThreshold","minDeposit","maxCandidateMetadataSize","U64ValueToNumber","value","parseInt","U64","ensure","toString","paramsFromRPCParams","rpcParams","networkID","minPayCost","minSetRegularKeyCost","minCreateShardCost","minSetShardOwnersCost","minSetShardUsersCost","minWrapCccCost","minCustomCost","minStoreCost","minRemoveCost","minMintAssetCost","minTransferAssetCost","minChangeAssetSchemeCost","minIncreaseAssetSupplyCost","minComposeAssetCost","minDecomposeAssetCost","minUnwrapCccCost","max_candidate_metadata_size","paramsToRLPBytes","_ref","params","seq","RLP","map","key","paramsAndSignaturesToRLPBytes","_ref2","signatures","concat","Object","_Users_juhyeong_code_kodebox_codechain_parameter_changer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","signature","startsWith","bufferToNumber","debugFieldName","length","readUIntBE","err","newError","Error","original","RLPBytesToParams","hex","decoded","Buffer","_ref3","_ref4","_Users_juhyeong_code_kodebox_codechain_parameter_changer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","maxExtraDataSizeRaw","maxAssetSchemeMetadataSizeRaw","maxTransferMetadataSizeRaw","maxTextContentSizeRaw","networkIdRaw","minPayTransactionCostRaw","minSetRegularKeyTransactionCostRaw","minCreateShardTransactionCostRaw","minSetShardOwnersTransactionCostRaw","minSetShardUsersTransactionCostRaw","minWrapCccTransactionCostRaw","minCustomTransactionCostRaw","minStoreTransactionCostRaw","minRemoveTransactionCostRaw","minAssetMintCostRaw","minAssetTransferCostRaw","minAssetSchemeChangeCostRaw","minAssetSupplyIncreaseCostRaw","minAssetComposeCostRaw","minAssetDecomposeCostRaw","minAssetUnwrapCccCostRaw","maxBodySizeRaw","snapshotPeriodRaw","termSecondsRaw","nominationExpirationRaw","custodyPeriodRaw","releasePeriodRaw","maxNumOfValidatorsRaw","minNumOfValidatorsRaw","delegationThresholdRaw","minDepositRaw","maxCandidateMetadataSizeRaw","loadParamsFromRPC","_callee2","rpcURL","sdk","regenerator_default","a","wrap","_context2","prev","next","SDK","server","rpc","sendRpcRequest","sent","abrupt","stop","loadSeqFromRPC","ParamsLoader","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleRLPEncodedInputChange","event","text","target","setState","typedRLPEncoded","handleRLPEncodedClick","_event","rawParams","state","newParamsAndSeq","onLoadParamsAndSeq","console","error","alert","handleRPCURLInputChange","typedCodeChainRPCURL","handleRPCURLClick","asyncToGenerator","mark","_callee","newParams","newSeq","_context","Promise","all","slicedToArray","t0","_x2","apply","arguments","react_default","createElement","Col","xs","className","Row","lg","Form","Control","type","onChange","placeholder","Button","onClick","variant","Component","ParamsEditor","handleSeqInputChange","typedSeq","onChangeParamsAndSeq","paramsAndSeq","_err","handleParamsInputChange","objectSpread","defineProperty","_this2","disabled","Group","Label","column","String","defaultProps","PermalinkPrinter","rlpBytes","react_router_dom","to","window","location","href","SignatureCollector","handleRemoveClick","toRemove","name","onRemoveSignature","handleInputChange","typed","handleAddButtonClick","indexOf","onAddSignature","Fragment","size","TransactionCreator","handleClick","paramsAndSignatures","Viewer","encodedParams","match","Container","Components_ParamsEditor","noOp","blake256","withRouter","App","Index","ParamsLoader_ParamsLoader","handleLoadParamsAndSeq","paramsEditorKey","handleChangeParamsAndSeq","PermalinkPrinter_PermalinkPrinter","SignatureCollector_SignatureCollector","handleAddSignature","handleRemoveSignature","TransactionCreator_TransactionCreator","join","Math","random","changedParamsAndSeq","prevState","toConsumableArray","newSignatures","index","splice","react_router","exact","path","component","React","Boolean","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2eA6CaA,EAA+B,CAC1C,mBACA,6BACA,0BACA,qBACA,YACA,wBACA,kCACA,gCACA,mCACA,kCACA,4BACA,2BACA,0BACA,2BACA,mBACA,uBACA,2BACA,6BACA,sBACA,wBACA,wBACA,cACA,iBACA,cACA,uBACA,gBACA,gBACA,qBACA,qBACA,sBACA,aACA,4BAGK,SAASC,IAEd,MAAO,CACLC,iBAAkB,GAClBC,2BAA4B,KAC5BC,wBAAyB,IACzBC,mBAAoB,IACpBC,UAAW,KACXC,sBAAuB,IACvBC,gCAAiC,IACjCC,8BAA+B,IAC/BC,iCAAkC,IAClCC,gCAAiC,IACjCC,0BAA2B,IAC3BC,yBAA0B,EAC1BC,wBAAyB,IACzBC,yBAA0B,IAC1BC,iBAAkB,IAClBC,qBAAsB,IACtBC,yBAA0B,IAC1BC,2BAA4B,IAC5BC,oBAAqB,IACrBC,sBAAuB,IACvBC,sBAAuB,IACvBC,YAAa,QACbC,eAAgB,MAChBC,YAAa,EACbC,qBAAsB,EACtBC,cAAe,EACfC,cAAe,EACfC,mBAAoB,EACpBC,mBAAoB,EACpBC,oBAAqB,EACrBC,WAAY,EACZC,yBAA0B,GAK9B,SAASC,EAAiBC,GACxB,OAAOC,SAASC,MAAIC,OAAOH,GAAS,GAAGI,SAAS,IAAK,IAGhD,SAASC,EAAoBC,GAClC,MAAO,CACLvC,iBAAkBgC,EAAiBO,EAAUvC,kBAC7CC,2BAA4B+B,EAAiBO,EAAUtC,4BACvDC,wBAAyB8B,EAAiBO,EAAUrC,yBACpDC,mBAAoB6B,EAAiBO,EAAUpC,oBAC/CC,UAAWmC,EAAUC,UACrBnC,sBAAuB2B,EAAiBO,EAAUE,YAClDnC,gCAAiC0B,EAAiBO,EAAUG,sBAC5DnC,8BAA+ByB,EAAiBO,EAAUI,oBAC1DnC,iCAAkCwB,EAAiBO,EAAUK,uBAC7DnC,gCAAiCuB,EAAiBO,EAAUM,sBAC5DnC,0BAA2BsB,EAAiBO,EAAUO,gBACtDnC,yBAA0BqB,EAAiBO,EAAUQ,eACrDnC,wBAAyBoB,EAAiBO,EAAUS,cACpDnC,yBAA0BmB,EAAiBO,EAAUU,eACrDnC,iBAAkBkB,EAAiBO,EAAUW,kBAC7CnC,qBAAsBiB,EAAiBO,EAAUY,sBACjDnC,yBAA0BgB,EAAiBO,EAAUa,0BACrDnC,2BAA4Be,EAAiBO,EAAUc,4BACvDnC,oBAAqBc,EAAiBO,EAAUe,qBAChDnC,sBAAuBa,EAAiBO,EAAUgB,uBAClDnC,sBAAuBY,EAAiBO,EAAUiB,kBAClDnC,YAAaW,EAAiBO,EAAUlB,aACxCC,eAAgBU,EAAiBO,EAAUjB,gBAC3CC,YAAaS,EAAiBO,EAAUhB,aACxCC,qBAAsBQ,EAAiBO,EAAUf,sBACjDC,cAAeO,EAAiBO,EAAUd,eAC1CC,cAAeM,EAAiBO,EAAUb,eAC1CC,mBAAoBK,EAAiBO,EAAUZ,oBAC/CC,mBAAoBI,EAAiBO,EAAUX,oBAC/CC,oBAAqBG,EAAiBO,EAAUV,qBAChDC,WAAYE,EAAiBO,EAAUT,YACvCC,yBAA0BC,EAAiBO,EAAUkB,8BAIlD,SAASC,EAATC,GAAiE,IAArCC,EAAqCD,EAArCC,OAAQC,EAA6BF,EAA7BE,IACzC,OAAOC,SAAW,CAChB,IACAD,EACA/D,EAAWiE,IAAI,SAAAC,GAEb,MAAY,cAARA,EACKJ,EAAOI,GAEPhC,EAAiB4B,EAAOI,QAMhC,SAASC,EAATC,EAELC,GACQ,IAFNP,EAEMM,EAFNN,OAAQC,EAEFK,EAFEL,IAGV,OAAOC,SAAA,CACL,IACAD,EACA/D,EAAWiE,IAAI,SAAAC,GAEb,MAAY,cAARA,EACKJ,EAAOI,GAEPhC,EAAiB4B,EAAOI,OAR9BI,OAAAC,OAAAC,EAAA,EAAAD,CAWFF,EAAWJ,IAAI,SAAAQ,GAChB,OAAIA,EAAUC,WAAW,MAChBD,EAEP,KAAAH,OAAYG,QAMpB,SAASE,EAAexC,EAAeyC,GACrC,IACE,OAAqB,IAAjBzC,EAAM0C,OACD,EAEA1C,EAAM2C,WAAW,EAAG3C,EAAM0C,QAEnC,MAAOE,GACP,IAAMC,EAAW,IAAIC,MAAJ,oBAAAX,OAA8BM,IAE/C,MADCI,EAAiBE,SAAWH,EACvBC,GAIH,SAASG,EAAiBC,GAC/B,IAAMC,EAAoBrB,SAAW,IAAIsB,EAAOF,EAAK,QAErD,GAAuB,IAAnBC,EAAQR,OACV,MAAM,IAAII,MAAJ,qCAAAX,OAA+Ce,EAAQR,OAAvD,kBAGR,GAA0B,KAAtBQ,EAAQ,GAAGR,OACb,MAAM,IAAII,MAAJ,qCAAAX,OAA+Ce,EAAQR,OAAvD,mBAGR,GAAmC,OAA/BQ,EAAQ,GAAG9C,SAAS,OACtB,MAAM,IAAI0C,MAAJ,6CAAAX,OAAuDe,EAAQ,GAAG9C,SAAS,SAEnF,IAAMwB,EAAMY,EAAeU,EAAQ,GAAI,OAdmBE,EAiDtDF,EAAQ,GAjD8CG,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAgB,EAAA,IAiBxDG,EAjBwDF,EAAA,GAkBxDG,EAlBwDH,EAAA,GAmBxDI,EAnBwDJ,EAAA,GAoBxDK,EApBwDL,EAAA,GAqBxDM,EArBwDN,EAAA,GAsBxDO,EAtBwDP,EAAA,GAuBxDQ,EAvBwDR,EAAA,GAwBxDS,EAxBwDT,EAAA,GAyBxDU,EAzBwDV,EAAA,GA0BxDW,EA1BwDX,EAAA,GA2BxDY,EA3BwDZ,EAAA,IA4BxDa,EA5BwDb,EAAA,IA6BxDc,EA7BwDd,EAAA,IA8BxDe,EA9BwDf,EAAA,IA+BxDgB,EA/BwDhB,EAAA,IAgCxDiB,EAhCwDjB,EAAA,IAiCxDkB,EAjCwDlB,EAAA,IAkCxDmB,EAlCwDnB,EAAA,IAmCxDoB,EAnCwDpB,EAAA,IAoCxDqB,EApCwDrB,EAAA,IAqCxDsB,EArCwDtB,EAAA,IAsCxDuB,EAtCwDvB,EAAA,IAuCxDwB,EAvCwDxB,EAAA,IAwCxDyB,EAxCwDzB,EAAA,IAyCxD0B,EAzCwD1B,EAAA,IA0CxD2B,EA1CwD3B,EAAA,IA2CxD4B,EA3CwD5B,EAAA,IA4CxD6B,EA5CwD7B,EAAA,IA6CxD8B,EA7CwD9B,EAAA,IA8CxD+B,EA9CwD/B,EAAA,IA+CxDgC,EA/CwDhC,EAAA,IAgDxDiC,EAhDwDjC,EAAA,IAuH1D,MAAO,CACL1B,OArEa,CACb5D,iBAAkByE,EAAee,EAAqB,oBACtDvF,2BAA4BwE,EAC1BgB,EACA,8BAEFvF,wBAAyBuE,EAAeiB,EAA4B,2BACpEvF,mBAAoBsE,EAAekB,EAAuB,sBAC1DvF,UAAWwF,EAAavD,SAAS,SACjChC,sBAAuBoE,EAAeoB,EAA0B,yBAChEvF,gCAAiCmE,EAC/BqB,EACA,mCAEFvF,8BAA+BkE,EAC7BsB,EACA,iCAEFvF,iCAAkCiE,EAChCuB,EACA,oCAEFvF,gCAAiCgE,EAC/BwB,EACA,mCAEFvF,0BAA2B+D,EACzByB,EACA,6BAEFvF,yBAA0B8D,EACxB0B,EACA,4BAEFvF,wBAAyB6D,EAAe2B,EAA4B,2BACpEvF,yBAA0B4D,EACxB4B,EACA,4BAEFvF,iBAAkB2D,EAAe6B,EAAqB,oBACtDvF,qBAAsB0D,EAAe8B,EAAyB,wBAC9DvF,yBAA0ByD,EACxB+B,EACA,4BAEFvF,2BAA4BwD,EAC1BgC,EACA,8BAEFvF,oBAAqBuD,EAAeiC,EAAwB,uBAC5DvF,sBAAuBsD,EAAekC,EAA0B,yBAChEvF,sBAAuBqD,EAAemC,EAA0B,yBAChEvF,YAAaoD,EAAeoC,EAAgB,eAC5CvF,eAAgBmD,EAAeqC,EAAmB,kBAClDvF,YAAakD,EAAesC,EAAgB,eAC5CvF,qBAAsBiD,EAAeuC,EAAyB,wBAC9DvF,cAAegD,EAAewC,EAAkB,iBAChDvF,cAAe+C,EAAeyC,EAAkB,iBAChDvF,mBAAoB8C,EAAe0C,EAAuB,sBAC1DvF,mBAAoB6C,EAAe2C,EAAuB,sBAC1DvF,oBAAqB4C,EAAe4C,EAAwB,uBAC5DvF,WAAY2C,EAAe6C,EAAe,cAC1CvF,yBAA0B0C,EACxB8C,EACA,6BAMF1D,ySCjUW2D,+EAAf,SAAAC,EAAiCC,GAAjC,IAAAC,EAAApF,EAAA,OAAAqF,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACQN,EAAM,IAAIO,MAAI,CAClBC,OAAQT,IAFZK,EAAAE,KAAA,EAI0BN,EAAIS,IAAIC,eAAe,wBAAyB,CAAC,OAJ3E,cAIQ9F,EAJRwF,EAAAO,KAAAP,EAAAQ,OAAA,SAKSjG,YAAoBC,IAL7B,wBAAAwF,EAAAS,SAAAf,6BAQA,SAASgB,EAAef,GAItB,OAHY,IAAIQ,MAAI,CAClBC,OAAQT,IAECU,IAAIC,eAAe,uBAAwB,CAAC,WAGpCK,cACnB,SAAAA,EAAmBC,GAAiB,IAAAC,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAJ,IAClCE,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAAqE,GAAAO,KAAAH,KAAMH,KA8CAO,4BAA8B,SAACC,GACrC,IAAMC,EAAOD,EAAME,OAAOpH,MAC1B2G,EAAKU,SAAS,CACZC,gBAAiBH,KAlDeR,EAsD5BY,sBAAwB,SAACC,GAC/B,IAAMC,EAAYd,EAAKe,MAAMJ,gBAE7B,IACE,IAAMK,EAAkB3E,YAAiByE,GACzCd,EAAKD,MAAMkB,mBAAmBD,GAC9B,MAAO/E,GACPiF,QAAQC,MAAMlF,GAEdmF,MAAMnF,KA/D0B+D,EAmE5BqB,wBAA0B,SAACd,GACjC,IAAMC,EAAOD,EAAME,OAAOpH,MAC1B2G,EAAKU,SAAS,CACZY,qBAAsBd,KAtEUR,EA0E5BuB,kBA1E4B,eAAAxG,EAAAU,OAAA+F,EAAA,EAAA/F,CAAAuD,EAAAC,EAAAwC,KA0ER,SAAAC,EAAOb,GAAP,IAAA/B,EAAAxD,EAAAmB,EAAAkF,EAAAC,EAAA,OAAA5C,EAAAC,EAAAC,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cACpBP,EAASkB,EAAKe,MAAMO,qBADAO,EAAAzC,KAAA,EAAAyC,EAAAxC,KAAA,EAIUyC,QAAQC,IAAI,CAC5CnD,EAAkBE,GAClBe,EAAef,KANO,OAAAxD,EAAAuG,EAAAnC,KAAAjD,EAAAhB,OAAAuG,EAAA,EAAAvG,CAAAH,EAAA,GAIjBqG,EAJiBlF,EAAA,GAINmF,EAJMnF,EAAA,GAQxBuD,EAAKD,MAAMkB,mBAAmB,CAC5BjG,OAAQ2G,EACR1G,IAAK2G,IAViBC,EAAAxC,KAAA,iBAAAwC,EAAAzC,KAAA,GAAAyC,EAAAI,GAAAJ,EAAA,SAaxBX,QAAQC,MAARU,EAAAI,IACAb,MAAKS,EAAAI,IAdmB,yBAAAJ,EAAAjC,SAAA8B,EAAA,kBA1EQ,gBAAAQ,GAAA,OAAAnH,EAAAoH,MAAAjC,KAAAkC,YAAA,GAElCpC,EAAKe,MAAQ,CACXJ,gBAAiB,GACjBW,qBAAsB,IAJUtB,wEASlC,OACEqC,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAU,qCACrBJ,EAAApD,EAAAqD,cAACI,EAAA,EAAD,KACEL,EAAApD,EAAAqD,cAAA,QAAMG,UAAU,yBAAhB,qCACAJ,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAIF,UAAU,QAC5BJ,EAAApD,EAAAqD,cAACM,EAAA,EAAKC,QAAN,CACEC,KAAK,OACLzJ,MAAO6G,KAAKa,MAAMJ,gBAClBoC,SAAU7C,KAAKI,4BACf0C,YAAY,iDAGhBX,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,KACdN,EAAApD,EAAAqD,cAACW,EAAA,EAAD,CAAQC,QAAShD,KAAKU,sBAAuBuC,QAAQ,WAArD,YAKJd,EAAApD,EAAAqD,cAACI,EAAA,EAAD,KACEL,EAAApD,EAAAqD,cAAA,QAAMG,UAAU,eAAhB,mBACAJ,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAIF,UAAU,QAC5BJ,EAAApD,EAAAqD,cAACM,EAAA,EAAKC,QAAN,CACEC,KAAK,OACLzJ,MAAO6G,KAAKa,MAAMO,qBAClByB,SAAU7C,KAAKmB,wBACf2B,YAAY,4BAGhBX,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,KACdN,EAAApD,EAAAqD,cAACW,EAAA,EAAD,CAAQC,QAAShD,KAAKqB,kBAAmB4B,QAAQ,WAAjD,oBAvC8BC,sBCfpCC,cACJ,SAAAA,EAAmBtD,GAAiB,IAAAC,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAmD,IAClCrD,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAA4H,GAAAhD,KAAAH,KAAMH,KA+DAuD,qBAAuB,SAAC/C,GAC9B,IAAMC,EAAQD,EAAME,OAA4BpH,MAChD2G,EAAKU,SAAS,CACZ6C,SAAU/C,IAEZ,IACE,IAAMoB,EAAStI,SAASkH,EAAM,IAC9BR,EAAKD,MAAMyD,qBAAqB,CAC9BxI,OAAQgF,EAAKD,MAAM0D,aAAazI,OAChCC,IAAK2G,IAEP,MAAO8B,GACP1D,EAAKD,MAAMyD,qBAAqB,CAC9BxI,OAAQgF,EAAKD,MAAM0D,aAAazI,OAChCC,IAAK,MA9EyB+E,EAmF5B2D,wBAA0B,SAACvI,EAAmBmF,GACpD,IAAMC,EAAQD,EAAME,OAA4BpH,MAC1CsI,EAASlG,OAAAmI,EAAA,EAAAnI,CAAA,GACVuE,EAAKD,MAAM0D,aAAazI,OADdS,OAAAoI,EAAA,EAAApI,CAAA,GAEZL,EAAMoF,IAETR,EAAKD,MAAMyD,qBAAqB,CAC9BxI,OAAQ2G,EACR1G,IAAK+E,EAAKD,MAAM0D,aAAaxI,OAxF/B+E,EAAKe,MAAQ,CACXwC,SAAUxD,EAAM0D,aAAaxI,IAAIxB,YAJDuG,wEAQpB,IAAA8D,EAAA5D,KACd,OACEmC,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,UAAU,qCACrBJ,EAAApD,EAAAqD,cAACI,EAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAI,IACNtC,KAAKH,MAAMgE,UACV1B,EAAApD,EAAAqD,cAAA,0BAEED,EAAApD,EAAAqD,cAAA,WACAD,EAAApD,EAAAqD,cAAA,8CAKRD,EAAApD,EAAAqD,cAACI,EAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAI,IACPH,EAAApD,EAAAqD,cAACM,EAAA,EAAD,CAAMH,UAAU,OACdJ,EAAApD,EAAAqD,cAACM,EAAA,EAAKoB,MAAN,CAAYvB,UAAU,uBACpBJ,EAAApD,EAAAqD,cAACM,EAAA,EAAKqB,MAAN,CAAYxB,UAAU,kBAAkByB,QAAM,GAA9C,OAGA7B,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAI,KAAMG,GAAI,KACjBN,EAAApD,EAAAqD,cAACM,EAAA,EAAKC,QAAN,CACEC,KAAK,OACLzJ,MAAO8K,OAAOjE,KAAKa,MAAMwC,UACzBR,SAAU7C,KAAKoD,qBACfS,SAAU7D,KAAKH,MAAMgE,cAK7B1B,EAAApD,EAAAqD,cAACM,EAAA,EAAD,CAAMH,UAAU,OACbvL,IAAWiE,IAAI,SAAAC,GACd,OACEiH,EAAApD,EAAAqD,cAACM,EAAA,EAAKoB,MAAN,CAAY5I,IAAKA,EAAKqH,UAAU,uBAC9BJ,EAAApD,EAAAqD,cAACM,EAAA,EAAKqB,MAAN,CAAYxB,UAAU,kBAAkByB,QAAM,GAC3C9I,GAEHiH,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAI,KAAMG,GAAI,KACjBN,EAAApD,EAAAqD,cAACM,EAAA,EAAKC,QAAN,CACEC,KAAK,OACLzJ,MAAO8K,OAAOL,EAAK/D,MAAM0D,aAAazI,OAAOI,IAC7C2H,SAAU,SAACxC,GAAD,OAAgBuD,EAAKH,wBAAwBvI,EAAKmF,IAC5DwD,SAAUD,EAAK/D,MAAMgE,0BApDlBX,aAiG1BC,EAAqBe,aAAe,CACnCL,UAAU,GAGGV,iBCzGMgB,mLAEjB,IAAIC,EAAW,KACf,IACEA,EAAWxJ,YAAiB,CAC1BE,OAAQkF,KAAKH,MAAM/E,OACnBC,IAAKiF,KAAKH,MAAM9E,MACfxB,SAAS,OACZ,MAAOiK,GACPY,EAAW,KAGb,OACEjC,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAU,+CACrBJ,EAAApD,EAAAqD,cAAA,qBACAD,EAAApD,EAAAqD,cAAA,SACED,EAAApD,EAAAqD,cAAA,8EACAD,EAAApD,EAAAqD,cAAA,WACCgC,GACCjC,EAAApD,EAAAqD,cAACiC,EAAA,EAAD,CAAMC,GAAE,IAAAhJ,OAAM8I,GAAY7B,UAAU,iBAApC,GAAAjH,OACMiJ,OAAOC,SAASC,MADtBnJ,OAC6B8I,KAKjCjC,EAAApD,EAAAqD,cAAA,KAAGG,UAAU,sBACXJ,EAAApD,EAAAqD,cAAA,wEACAD,EAAApD,EAAAqD,cAAA,WACCgC,GAAY,0BA5BuBlB,aCIzBwB,cACnB,SAAAA,EAAmB7E,GAAiB,IAAAC,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAA0E,IAClC5E,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAAmJ,GAAAvE,KAAAH,KAAMH,KA2DA8E,kBAAoB,SAACtE,GAC3B,IAAMuE,EAAsBvE,EAAME,OAAOsE,KACzC/E,EAAKD,MAAMiF,kBAAkBF,IA9DK9E,EAiE5BiF,kBAAoB,SAAC1E,GAC3B,IAAMC,EAAOD,EAAME,OAAOpH,MAC1B2G,EAAKU,SAAS,CACZwE,MAAO1E,KApEyBR,EAwE5BmF,qBAAuB,SAACtE,GACL,KAArBb,EAAKe,MAAMmE,SAI0C,IAArDlF,EAAKD,MAAMxE,WAAW6J,QAAQpF,EAAKe,MAAMmE,QAM7ClF,EAAKD,MAAMsF,eAAerF,EAAKe,MAAMmE,OACrClF,EAAKU,SAAS,CACZwE,MAAO,MANP9D,MAAM,qCA7ERpB,EAAKe,MAAQ,CACXmE,MAAO,IAHyBlF,wEAOpB,IAAA8D,EAAA5D,KACd,OACEmC,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAU,qCACrBJ,EAAApD,EAAAqD,cAACI,EAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAU,QACrBJ,EAAApD,EAAAqD,cAAA,iCACAD,EAAApD,EAAAqD,cAAA,WACAD,EAAApD,EAAAqD,cAAA,iFAIJD,EAAApD,EAAAqD,cAACI,EAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKE,UAAU,QACbJ,EAAApD,EAAAqD,cAACM,EAAA,EAAKC,QAAN,CACEC,KAAK,OACLzJ,MAAO6G,KAAKa,MAAMmE,MAClBnC,SAAU7C,KAAK+E,kBACfjC,YAAY,qBAIhBX,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,KACdN,EAAApD,EAAAqD,cAACW,EAAA,EAAD,CAAQE,QAAQ,UAAUD,QAAShD,KAAKiF,sBAAxC,aAMHjF,KAAKH,MAAMxE,WAAWQ,OAAS,GAC9BsG,EAAApD,EAAAqD,cAAAD,EAAApD,EAAAqG,SAAA,KACEjD,EAAApD,EAAAqD,cAAA,qCACAD,EAAApD,EAAAqD,cAAA,UACGpC,KAAKH,MAAMxE,WAAWJ,IAAI,SAAAQ,GAAS,OAClC0G,EAAApD,EAAAqD,cAAA,MAAIlH,IAAKO,EAAW8G,UAAU,sBAC3B9G,EACD0G,EAAApD,EAAAqD,cAACW,EAAA,EAAD,CACEsC,KAAK,KACL9C,UAAU,OACVsC,KAAMpJ,EACNuH,QAASY,EAAKe,kBACd1B,QAAQ,mBALV,uBA3C8BC,aCA3BoC,cACnB,SAAAA,EAAmBzF,GAAiB,IAAAC,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAsF,IAClCxF,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAA+J,GAAAnF,KAAAH,KAAMH,KAuCA0F,YAAc,SAAC5E,GACrB,IAAMyD,EAAWjJ,YACf,CACEL,OAAQgF,EAAKD,MAAM/E,OACnBC,IAAK+E,EAAKD,MAAM9E,KAElB+E,EAAKD,MAAMxE,YAEbyE,EAAKU,SAAS,CACZgF,oBAAqBpB,EAAS7K,SAAS,UA/CzCuG,EAAKe,MAAQ,CACX2E,oBAAqB,MAHW1F,wEAQlC,OACEqC,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAU,qCACrBJ,EAAApD,EAAAqD,cAAA,OAAKG,UAAU,QACbJ,EAAApD,EAAAqD,cAAA,iCAEED,EAAApD,EAAAqD,cAAA,WACAD,EAAApD,EAAAqD,cAAA,oHAOJD,EAAApD,EAAAqD,cAACW,EAAA,EAAD,CAAQC,QAAShD,KAAKuF,YAAahD,UAAU,QAC1C,IADH,qBAEqB,KAGpBvC,KAAKa,MAAM2E,qBACVrD,EAAApD,EAAAqD,cAAA,KAAGG,UAAU,iBACXJ,EAAApD,EAAAqD,cAAA,qCACAD,EAAApD,EAAAqD,cAAA,WACAD,EAAApD,EAAAqD,cAAA,gFACAD,EAAApD,EAAAqD,cAAA,WACAD,EAAApD,EAAAqD,cAAA,WACAD,EAAApD,EAAAqD,cAAA,YAAOpC,KAAKa,MAAM2E,8BAlCkBtC,6CCJ1CuC,mLAEF,IAAMC,EAAiB1F,KAAKH,MAAM8F,MAAM7K,OAAe4K,cACjDnC,EAAepH,YAAiBuJ,GACtC,OACEvD,EAAApD,EAAAqD,cAACwD,EAAA,EAAD,KACEzD,EAAApD,EAAAqD,cAACI,EAAA,EAAD,CAAKD,UAAU,QACbJ,EAAApD,EAAAqD,cAACyD,EAAD,CAActC,aAAcA,EAAcD,qBAAsBtD,KAAK8F,KAAMjC,UAAQ,KAErF1B,EAAApD,EAAAqD,cAACI,EAAA,EAAD,CAAKD,UAAU,aACbJ,EAAApD,EAAAqD,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,UAAU,mDAAvB,mBACmBmD,EACjBvD,EAAApD,EAAAqD,cAAA,WACAD,EAAApD,EAAAqD,cAAA,WAHF,uBAIuB2D,mBAAS/K,SAAW0K,GAAenM,SAAS,kDAdxD2J,aAwBN8C,cAAWP,GCdLQ,cACnB,SAAAA,EAAmBpG,GAAY,IAAAC,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAiG,IAC7BnG,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAA0K,GAAA9F,KAAAH,KAAMH,KAmBAqG,MAAQ,WACd,OACE/D,EAAApD,EAAAqD,cAACwD,EAAA,EAAD,KACEzD,EAAApD,EAAAqD,cAAA,MAAIG,UAAU,QAAd,kCACAJ,EAAApD,EAAAqD,cAACI,EAAA,EAAD,CAAKD,UAAU,QACbJ,EAAApD,EAAAqD,cAAC+D,EAAD,CAAcpF,mBAAoBjB,EAAKsG,0BAEzCjE,EAAApD,EAAAqD,cAACI,EAAA,EAAD,CAAKD,UAAU,QACbJ,EAAApD,EAAAqD,cAACyD,EAAD,CACE3K,IAAK4E,EAAKe,MAAMwF,gBAChB9C,aAAc,CAAEzI,OAAQgF,EAAKe,MAAM/F,OAAQC,IAAK+E,EAAKe,MAAM9F,KAC3DuI,qBAAsBxD,EAAKwG,4BAG/BnE,EAAApD,EAAAqD,cAACI,EAAA,EAAD,CAAKD,UAAU,QACbJ,EAAApD,EAAAqD,cAACmE,EAAD,CAAkBzL,OAAQgF,EAAKe,MAAM/F,OAAQC,IAAK+E,EAAKe,MAAM9F,OAE/DoH,EAAApD,EAAAqD,cAACI,EAAA,EAAD,CAAKD,UAAU,QACbJ,EAAApD,EAAAqD,cAACoE,EAAD,CACEnL,WAAYyE,EAAKe,MAAMxF,WACvB8J,eAAgBrF,EAAK2G,mBACrB3B,kBAAmBhF,EAAK4G,yBAG5BvE,EAAApD,EAAAqD,cAACI,EAAA,EAAD,CAAKD,UAAU,aAEbJ,EAAApD,EAAAqD,cAACuE,EAAD,CACE7L,OAAQgF,EAAKe,MAAM/F,OACnBC,IAAK+E,EAAKe,MAAM9F,IAChBM,WAAYyE,EAAKe,MAAMxF,WACvBH,IAAK4E,EAAKe,MAAMxF,WAAWuL,KAAK,UAlDX9G,EAyDvBsG,uBAAyB,SAAAvL,GAAmC,IAAhCC,EAAgCD,EAAhCC,OAAQC,EAAwBF,EAAxBE,IAC1C+E,EAAKU,SAAS,CACZ1F,SACAC,MACAsL,gBAAiBQ,KAAKC,YA7DKhH,EAiEvBwG,yBAA2B,SAACS,GAClCjH,EAAKU,SAAS,CACZ1F,OAAQiM,EAAoBjM,OAC5BC,IAAKgM,EAAoBhM,OApEE+E,EAwEvB2G,mBAAqB,SAAChL,GAC5BqE,EAAKU,SAAS,SAAAwG,GACZ,OAAOzL,OAAAmI,EAAA,EAAAnI,CAAA,GACFyL,EADL,CAEE3L,WAAU,GAAAC,OAAAC,OAAA0L,EAAA,EAAA1L,CAAMyL,EAAU3L,YAAhB,CAA4BI,SA5EbqE,EAiFvB4G,sBAAwB,SAAC9B,GAC/B9E,EAAKU,SAAS,SAAAwG,GACZ,IAAME,EAAa3L,OAAA0L,EAAA,EAAA1L,CAAOyL,EAAU3L,YAC9B8L,EAAQH,EAAU3L,WAAW6J,QAAQN,GAE3C,OADAsC,EAAcE,OAAOD,EAAO,GACrB5L,OAAAmI,EAAA,EAAAnI,CAAA,GACFyL,EADL,CAEE3L,WAAY6L,OArFhBpH,EAAKe,MAAQ,CACX9F,IAAK,EACLD,OAAQ7D,cACRoP,gBAAiB,EACjBhL,WAAY,IAPeyE,wEAY7B,OACEqC,EAAApD,EAAAqD,cAAAD,EAAApD,EAAAqG,SAAA,KACEjD,EAAApD,EAAAqD,cAACiF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,UAAWxH,KAAKkG,QACxC/D,EAAApD,EAAAqD,cAACiF,EAAA,EAAD,CAAOE,KAAM,kBAAmBC,UAAW/B,YAhBlBgC,IAAMvE,WCNnBwE,QACW,cAA7BnD,OAAOC,SAASmD,UAEe,UAA7BpD,OAAOC,SAASmD,UAEhBpD,OAAOC,SAASmD,SAAShC,MAAM,2DCZnCiC,IAASC,OACP1F,EAAApD,EAAAqD,cAACiC,EAAA,EAAD,KACElC,EAAApD,EAAAqD,cAAC0F,EAAD,OAEFC,SAASC,eAAe,SD4HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0c701fc5.chunk.js","sourcesContent":["import { U64Value, U64 } from \"codechain-primitives\";\nimport * as RLP from \"rlp\";\n\nexport type NetworkId = string;\n\nexport interface Params {\n  maxExtraDataSize: U64Value;\n  maxAssetSchemeMetadataSize: U64Value;\n  maxTransferMetadataSize: U64Value;\n  maxTextContentSize: U64Value;\n  networkId: NetworkId;\n  minPayTransactionCost: U64Value;\n  minSetRegularKeyTransactionCost: U64Value;\n  minCreateShardTransactionCost: U64Value;\n  minSetShardOwnersTransactionCost: U64Value;\n  minSetShardUsersTransactionCost: U64Value;\n  minWrapCccTransactionCost: U64Value;\n  minCustomTransactionCost: U64Value;\n  minStoreTransactionCost: U64Value;\n  minRemoveTransactionCost: U64Value;\n  minAssetMintCost: U64Value;\n  minAssetTransferCost: U64Value;\n  minAssetSchemeChangeCost: U64Value;\n  minAssetSupplyIncreaseCost: U64Value;\n  minAssetComposeCost: U64Value;\n  minAssetDecomposeCost: U64Value;\n  minAssetUnwrapCccCost: U64Value;\n  maxBodySize: U64Value;\n  snapshotPeriod: U64Value;\n  termSeconds: U64Value;\n  nominationExpiration: U64Value;\n  custodyPeriod: U64Value;\n  releasePeriod: U64Value;\n  maxNumOfValidators: U64Value;\n  minNumOfValidators: U64Value;\n  delegationThreshold: U64Value;\n  minDeposit: U64Value;\n  maxCandidateMetadataSize: U64Value;\n}\n\nexport interface ParamsAndSeq {\n  params: Params;\n  seq: number;\n}\n\nexport const ParamsKeys: (keyof Params)[] = [\n  \"maxExtraDataSize\",\n  \"maxAssetSchemeMetadataSize\",\n  \"maxTransferMetadataSize\",\n  \"maxTextContentSize\",\n  \"networkId\",\n  \"minPayTransactionCost\",\n  \"minSetRegularKeyTransactionCost\",\n  \"minCreateShardTransactionCost\",\n  \"minSetShardOwnersTransactionCost\",\n  \"minSetShardUsersTransactionCost\",\n  \"minWrapCccTransactionCost\",\n  \"minCustomTransactionCost\",\n  \"minStoreTransactionCost\",\n  \"minRemoveTransactionCost\",\n  \"minAssetMintCost\",\n  \"minAssetTransferCost\",\n  \"minAssetSchemeChangeCost\",\n  \"minAssetSupplyIncreaseCost\",\n  \"minAssetComposeCost\",\n  \"minAssetDecomposeCost\",\n  \"minAssetUnwrapCccCost\",\n  \"maxBodySize\",\n  \"snapshotPeriod\",\n  \"termSeconds\",\n  \"nominationExpiration\",\n  \"custodyPeriod\",\n  \"releasePeriod\",\n  \"maxNumOfValidators\",\n  \"minNumOfValidators\",\n  \"delegationThreshold\",\n  \"minDeposit\",\n  \"maxCandidateMetadataSize\",\n];\n\nexport function defaultParams(): Params {\n  // FIXME: use the real default value.\n  return {\n    maxExtraDataSize: 0x20,\n    maxAssetSchemeMetadataSize: 0x400,\n    maxTransferMetadataSize: 0x100,\n    maxTextContentSize: 0x200,\n    networkId: \"tc\",\n    minPayTransactionCost: 100,\n    minSetRegularKeyTransactionCost: 10000,\n    minCreateShardTransactionCost: 1000000,\n    minSetShardOwnersTransactionCost: 100000,\n    minSetShardUsersTransactionCost: 10000,\n    minWrapCccTransactionCost: 100000,\n    minCustomTransactionCost: 0,\n    minStoreTransactionCost: 5000,\n    minRemoveTransactionCost: 5000,\n    minAssetMintCost: 100000,\n    minAssetTransferCost: 100,\n    minAssetSchemeChangeCost: 100000,\n    minAssetSupplyIncreaseCost: 100000,\n    minAssetComposeCost: 100000,\n    minAssetDecomposeCost: 100000,\n    minAssetUnwrapCccCost: 100,\n    maxBodySize: 4194304,\n    snapshotPeriod: 16384,\n    termSeconds: 0,\n    nominationExpiration: 0,\n    custodyPeriod: 0,\n    releasePeriod: 0,\n    maxNumOfValidators: 0,\n    minNumOfValidators: 0,\n    delegationThreshold: 0,\n    minDeposit: 0,\n    maxCandidateMetadataSize: 0,\n  };\n}\n\n// This is unsafe. Please use when you are confident that it is safe.\nfunction U64ValueToNumber(value: U64Value | null) {\n  return parseInt(U64.ensure(value || 0).toString(10), 10);\n}\n\nexport function paramsFromRPCParams(rpcParams: any): Params {\n  return {\n    maxExtraDataSize: U64ValueToNumber(rpcParams.maxExtraDataSize),\n    maxAssetSchemeMetadataSize: U64ValueToNumber(rpcParams.maxAssetSchemeMetadataSize),\n    maxTransferMetadataSize: U64ValueToNumber(rpcParams.maxTransferMetadataSize),\n    maxTextContentSize: U64ValueToNumber(rpcParams.maxTextContentSize),\n    networkId: rpcParams.networkID,\n    minPayTransactionCost: U64ValueToNumber(rpcParams.minPayCost),\n    minSetRegularKeyTransactionCost: U64ValueToNumber(rpcParams.minSetRegularKeyCost),\n    minCreateShardTransactionCost: U64ValueToNumber(rpcParams.minCreateShardCost),\n    minSetShardOwnersTransactionCost: U64ValueToNumber(rpcParams.minSetShardOwnersCost),\n    minSetShardUsersTransactionCost: U64ValueToNumber(rpcParams.minSetShardUsersCost),\n    minWrapCccTransactionCost: U64ValueToNumber(rpcParams.minWrapCccCost),\n    minCustomTransactionCost: U64ValueToNumber(rpcParams.minCustomCost),\n    minStoreTransactionCost: U64ValueToNumber(rpcParams.minStoreCost),\n    minRemoveTransactionCost: U64ValueToNumber(rpcParams.minRemoveCost),\n    minAssetMintCost: U64ValueToNumber(rpcParams.minMintAssetCost),\n    minAssetTransferCost: U64ValueToNumber(rpcParams.minTransferAssetCost),\n    minAssetSchemeChangeCost: U64ValueToNumber(rpcParams.minChangeAssetSchemeCost),\n    minAssetSupplyIncreaseCost: U64ValueToNumber(rpcParams.minIncreaseAssetSupplyCost),\n    minAssetComposeCost: U64ValueToNumber(rpcParams.minComposeAssetCost),\n    minAssetDecomposeCost: U64ValueToNumber(rpcParams.minDecomposeAssetCost),\n    minAssetUnwrapCccCost: U64ValueToNumber(rpcParams.minUnwrapCccCost),\n    maxBodySize: U64ValueToNumber(rpcParams.maxBodySize),\n    snapshotPeriod: U64ValueToNumber(rpcParams.snapshotPeriod),\n    termSeconds: U64ValueToNumber(rpcParams.termSeconds),\n    nominationExpiration: U64ValueToNumber(rpcParams.nominationExpiration),\n    custodyPeriod: U64ValueToNumber(rpcParams.custodyPeriod),\n    releasePeriod: U64ValueToNumber(rpcParams.releasePeriod),\n    maxNumOfValidators: U64ValueToNumber(rpcParams.maxNumOfValidators),\n    minNumOfValidators: U64ValueToNumber(rpcParams.minNumOfValidators),\n    delegationThreshold: U64ValueToNumber(rpcParams.delegationThreshold),\n    minDeposit: U64ValueToNumber(rpcParams.minDeposit),\n    maxCandidateMetadataSize: U64ValueToNumber(rpcParams.max_candidate_metadata_size),\n  };\n}\n\nexport function paramsToRLPBytes({ params, seq }: ParamsAndSeq): Buffer {\n  return RLP.encode([\n    0xff,\n    seq,\n    ParamsKeys.map(key => {\n      // FIXME: This code would be broken easily when a field is added to the Params.\n      if (key === \"networkId\") {\n        return params[key];\n      } else {\n        return U64ValueToNumber(params[key]);\n      }\n    }),\n  ]);\n}\n\nexport function paramsAndSignaturesToRLPBytes(\n  { params, seq }: ParamsAndSeq,\n  signatures: Signature[],\n): Buffer {\n  return RLP.encode([\n    0xff,\n    seq,\n    ParamsKeys.map(key => {\n      // FIXME: This code would be broken easily when a field is added to the Params.\n      if (key === \"networkId\") {\n        return params[key];\n      } else {\n        return U64ValueToNumber(params[key]);\n      }\n    }),\n    ...signatures.map(signature => {\n      if (signature.startsWith(\"0x\")) {\n        return signature;\n      } else {\n        return `0x${signature}`;\n      }\n    }),\n  ]);\n}\n\nfunction bufferToNumber(value: Buffer, debugFieldName: string): number {\n  try {\n    if (value.length === 0) {\n      return 0;\n    } else {\n      return value.readUIntBE(0, value.length);\n    }\n  } catch (err) {\n    const newError = new Error(`Failed to decode ${debugFieldName}`);\n    (newError as any).original = err;\n    throw newError;\n  }\n}\n\nexport function RLPBytesToParams(hex: string): ParamsAndSeq {\n  const decoded: Buffer[] = RLP.decode(new Buffer(hex, \"hex\")) as any;\n\n  if (decoded.length !== 3) {\n    throw new Error(`Invalid RLP: length of the input: ${decoded.length} should be 3}`);\n  }\n\n  if (decoded[2].length !== 32) {\n    throw new Error(`Invalid RLP: length of the input: ${decoded.length} should be 32}`);\n  }\n\n  if (decoded[0].toString(\"hex\") !== \"ff\") {\n    throw new Error(`Invalid format:  expected: \"ff\" but found ${decoded[0].toString(\"hex\")}`);\n  }\n  const seq = bufferToNumber(decoded[1], \"seq\");\n\n  const [\n    maxExtraDataSizeRaw,\n    maxAssetSchemeMetadataSizeRaw,\n    maxTransferMetadataSizeRaw,\n    maxTextContentSizeRaw,\n    networkIdRaw,\n    minPayTransactionCostRaw,\n    minSetRegularKeyTransactionCostRaw,\n    minCreateShardTransactionCostRaw,\n    minSetShardOwnersTransactionCostRaw,\n    minSetShardUsersTransactionCostRaw,\n    minWrapCccTransactionCostRaw,\n    minCustomTransactionCostRaw,\n    minStoreTransactionCostRaw,\n    minRemoveTransactionCostRaw,\n    minAssetMintCostRaw,\n    minAssetTransferCostRaw,\n    minAssetSchemeChangeCostRaw,\n    minAssetSupplyIncreaseCostRaw,\n    minAssetComposeCostRaw,\n    minAssetDecomposeCostRaw,\n    minAssetUnwrapCccCostRaw,\n    maxBodySizeRaw,\n    snapshotPeriodRaw,\n    termSecondsRaw,\n    nominationExpirationRaw,\n    custodyPeriodRaw,\n    releasePeriodRaw,\n    maxNumOfValidatorsRaw,\n    minNumOfValidatorsRaw,\n    delegationThresholdRaw,\n    minDepositRaw,\n    maxCandidateMetadataSizeRaw,\n  ] = decoded[2] as any;\n\n  const params = {\n    maxExtraDataSize: bufferToNumber(maxExtraDataSizeRaw, \"maxExtraDataSize\"),\n    maxAssetSchemeMetadataSize: bufferToNumber(\n      maxAssetSchemeMetadataSizeRaw,\n      \"maxAssetSchemeMetadataSize\",\n    ),\n    maxTransferMetadataSize: bufferToNumber(maxTransferMetadataSizeRaw, \"maxTransferMetadataSize\"),\n    maxTextContentSize: bufferToNumber(maxTextContentSizeRaw, \"maxTextContentSize\"),\n    networkId: networkIdRaw.toString(\"ascii\"),\n    minPayTransactionCost: bufferToNumber(minPayTransactionCostRaw, \"minPayTransactionCost\"),\n    minSetRegularKeyTransactionCost: bufferToNumber(\n      minSetRegularKeyTransactionCostRaw,\n      \"minSetRegularKeyTransactionCost\",\n    ),\n    minCreateShardTransactionCost: bufferToNumber(\n      minCreateShardTransactionCostRaw,\n      \"minCreateShardTransactionCost\",\n    ),\n    minSetShardOwnersTransactionCost: bufferToNumber(\n      minSetShardOwnersTransactionCostRaw,\n      \"minSetShardOwnersTransactionCost\",\n    ),\n    minSetShardUsersTransactionCost: bufferToNumber(\n      minSetShardUsersTransactionCostRaw,\n      \"minSetShardUsersTransactionCost\",\n    ),\n    minWrapCccTransactionCost: bufferToNumber(\n      minWrapCccTransactionCostRaw,\n      \"minWrapCccTransactionCost\",\n    ),\n    minCustomTransactionCost: bufferToNumber(\n      minCustomTransactionCostRaw,\n      \"minCustomTransactionCost\",\n    ),\n    minStoreTransactionCost: bufferToNumber(minStoreTransactionCostRaw, \"minStoreTransactionCost\"),\n    minRemoveTransactionCost: bufferToNumber(\n      minRemoveTransactionCostRaw,\n      \"minRemoveTransactionCost\",\n    ),\n    minAssetMintCost: bufferToNumber(minAssetMintCostRaw, \"minAssetMintCost\"),\n    minAssetTransferCost: bufferToNumber(minAssetTransferCostRaw, \"minAssetTransferCost\"),\n    minAssetSchemeChangeCost: bufferToNumber(\n      minAssetSchemeChangeCostRaw,\n      \"minAssetSchemeChangeCost\",\n    ),\n    minAssetSupplyIncreaseCost: bufferToNumber(\n      minAssetSupplyIncreaseCostRaw,\n      \"minAssetSupplyIncreaseCost\",\n    ),\n    minAssetComposeCost: bufferToNumber(minAssetComposeCostRaw, \"minAssetComposeCost\"),\n    minAssetDecomposeCost: bufferToNumber(minAssetDecomposeCostRaw, \"minAssetDecomposeCost\"),\n    minAssetUnwrapCccCost: bufferToNumber(minAssetUnwrapCccCostRaw, \"minAssetUnwrapCccCost\"),\n    maxBodySize: bufferToNumber(maxBodySizeRaw, \"maxBodySize\"),\n    snapshotPeriod: bufferToNumber(snapshotPeriodRaw, \"snapshotPeriod\"),\n    termSeconds: bufferToNumber(termSecondsRaw, \"termSeconds\"),\n    nominationExpiration: bufferToNumber(nominationExpirationRaw, \"nominationExpiration\"),\n    custodyPeriod: bufferToNumber(custodyPeriodRaw, \"custodyPeriod\"),\n    releasePeriod: bufferToNumber(releasePeriodRaw, \"releasePeriod\"),\n    maxNumOfValidators: bufferToNumber(maxNumOfValidatorsRaw, \"maxNumOfValidators\"),\n    minNumOfValidators: bufferToNumber(minNumOfValidatorsRaw, \"minNumOfValidators\"),\n    delegationThreshold: bufferToNumber(delegationThresholdRaw, \"delegationThreshold\"),\n    minDeposit: bufferToNumber(minDepositRaw, \"minDeposit\"),\n    maxCandidateMetadataSize: bufferToNumber(\n      maxCandidateMetadataSizeRaw,\n      \"maxCandidateMetadataSize\",\n    ),\n  };\n\n  return {\n    params,\n    seq,\n  };\n}\n\nexport type Signature = string;\n","import React, { Component } from \"react\";\nimport { Params, RLPBytesToParams, paramsFromRPCParams, ParamsAndSeq } from \"../types\";\nimport { Col, Form, Button, Row } from \"react-bootstrap\";\nimport { SDK } from \"codechain-sdk\";\n\ninterface OwnProps {\n  onLoadParamsAndSeq: (paramsAndSeq: ParamsAndSeq) => void;\n}\n\ninterface OwnState {\n  typedRLPEncoded: string;\n  typedCodeChainRPCURL: string;\n}\n\nasync function loadParamsFromRPC(rpcURL: string): Promise<Params> {\n  const sdk = new SDK({\n    server: rpcURL,\n  });\n  const rpcParams = await sdk.rpc.sendRpcRequest(\"chain_getCommonParams\", [null]);\n  return paramsFromRPCParams(rpcParams);\n}\n\nfunction loadSeqFromRPC(rpcURL: string): Promise<number> {\n  const sdk = new SDK({\n    server: rpcURL,\n  });\n  return sdk.rpc.sendRpcRequest(\"chain_getMetadataSeq\", [null]);\n}\n\nexport default class ParamsLoader extends Component<OwnProps, OwnState> {\n  public constructor(props: OwnProps) {\n    super(props);\n    this.state = {\n      typedRLPEncoded: \"\",\n      typedCodeChainRPCURL: \"\",\n    };\n  }\n\n  public render() {\n    return (\n      <Col xs=\"12\" className=\"border rounded px-5 py-3 bg-light\">\n        <Row>\n          <span className=\"col-12 col-lg-12 mb-3\">Load params from RLP Encoded Data</span>\n          <Col xs=\"12\" lg=\"9\" className=\"mb-3\">\n            <Form.Control\n              type=\"text\"\n              value={this.state.typedRLPEncoded}\n              onChange={this.handleRLPEncodedInputChange}\n              placeholder=\"Paste RLP encoded data of the Common Params\"\n            />\n          </Col>\n          <Col xs=\"12\" lg=\"3\">\n            <Button onClick={this.handleRLPEncodedClick} variant=\"primary\">\n              Import\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <span className=\"col-12 mb-3\"> Load from RPC </span>\n          <Col xs=\"12\" lg=\"9\" className=\"mb-3\">\n            <Form.Control\n              type=\"text\"\n              value={this.state.typedCodeChainRPCURL}\n              onChange={this.handleRPCURLInputChange}\n              placeholder=\"Type CodeChain RPC URL\"\n            />\n          </Col>\n          <Col xs=\"12\" lg=\"3\">\n            <Button onClick={this.handleRPCURLClick} variant=\"primary\">\n              Import\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    );\n  }\n\n  private handleRLPEncodedInputChange = (event: any) => {\n    const text = event.target.value;\n    this.setState({\n      typedRLPEncoded: text,\n    });\n  };\n\n  private handleRLPEncodedClick = (_event: any) => {\n    const rawParams = this.state.typedRLPEncoded;\n\n    try {\n      const newParamsAndSeq = RLPBytesToParams(rawParams);\n      this.props.onLoadParamsAndSeq(newParamsAndSeq);\n    } catch (err) {\n      console.error(err);\n      // FIXME: show the error message in the page.\n      alert(err);\n    }\n  };\n\n  private handleRPCURLInputChange = (event: any) => {\n    const text = event.target.value;\n    this.setState({\n      typedCodeChainRPCURL: text,\n    });\n  };\n\n  private handleRPCURLClick = async (_event: any) => {\n    const rpcURL = this.state.typedCodeChainRPCURL;\n\n    try {\n      const [newParams, newSeq] = await Promise.all([\n        loadParamsFromRPC(rpcURL),\n        loadSeqFromRPC(rpcURL),\n      ]);\n      this.props.onLoadParamsAndSeq({\n        params: newParams,\n        seq: newSeq,\n      });\n    } catch (err) {\n      console.error(err);\n      alert(err);\n    }\n  };\n}\n","import React, { Component, FormEvent } from \"react\";\nimport { Params, ParamsKeys, ParamsAndSeq } from \"../types\";\nimport { Row, Col, Form } from \"react-bootstrap\";\n\ninterface OwnProps {\n  paramsAndSeq: ParamsAndSeq;\n  onChangeParamsAndSeq: (changedParams: ParamsAndSeq) => void;\n  disabled?: boolean;\n}\n\ninterface OwnState {\n  typedSeq: string;\n}\n\nclass ParamsEditor extends Component<OwnProps, OwnState> {\n  public constructor(props: OwnProps) {\n    super(props);\n\n    this.state = {\n      typedSeq: props.paramsAndSeq.seq.toString(),\n    };\n  }\n\n  public render() {\n    return (\n      <Col xs={12} className=\"border rounded px-5 py-3 bg-light\">\n        <Row>\n          <Col xs={12}>\n            {this.props.disabled || (\n              <span>\n                Edit Params\n                <br />\n                <em>Change parameters as you want</em>\n              </span>\n            )}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <Form className=\"row\">\n              <Form.Group className=\"col-12 col-lg-6 row\">\n                <Form.Label className=\"col-12 col-lg-8\" column>\n                  Seq\n                </Form.Label>\n                <Col xs={\"12\"} lg={\"4\"}>\n                  <Form.Control\n                    type=\"text\"\n                    value={String(this.state.typedSeq)}\n                    onChange={this.handleSeqInputChange}\n                    disabled={this.props.disabled}\n                  />\n                </Col>\n              </Form.Group>\n            </Form>\n            <Form className=\"row\">\n              {ParamsKeys.map(key => {\n                return (\n                  <Form.Group key={key} className=\"col-12 col-lg-6 row\">\n                    <Form.Label className=\"col-12 col-lg-8\" column>\n                      {key}\n                    </Form.Label>\n                    <Col xs={\"12\"} lg={\"4\"}>\n                      <Form.Control\n                        type=\"text\"\n                        value={String(this.props.paramsAndSeq.params[key])}\n                        onChange={(event: any) => this.handleParamsInputChange(key, event)}\n                        disabled={this.props.disabled}\n                      />\n                    </Col>\n                  </Form.Group>\n                );\n              })}\n            </Form>\n          </Col>\n        </Row>\n      </Col>\n    );\n  }\n\n  private handleSeqInputChange = (event: any) => {\n    const text = (event.target as HTMLInputElement).value;\n    this.setState({\n      typedSeq: text,\n    });\n    try {\n      const newSeq = parseInt(text, 10);\n      this.props.onChangeParamsAndSeq({\n        params: this.props.paramsAndSeq.params,\n        seq: newSeq,\n      });\n    } catch (_err) {\n      this.props.onChangeParamsAndSeq({\n        params: this.props.paramsAndSeq.params,\n        seq: 0,\n      });\n    }\n  };\n\n  private handleParamsInputChange = (key: keyof Params, event: FormEvent) => {\n    const text = (event.target as HTMLInputElement).value;\n    const newParams = {\n      ...this.props.paramsAndSeq.params,\n      [key]: text,\n    };\n    this.props.onChangeParamsAndSeq({\n      params: newParams,\n      seq: this.props.paramsAndSeq.seq,\n    });\n  };\n}\n\n(ParamsEditor as any).defaultProps = {\n  disabled: false,\n};\n\nexport default ParamsEditor;\n","import React, { Component } from \"react\";\nimport { Params, paramsToRLPBytes } from \"../types\";\nimport { Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\ninterface OwnProps {\n  params: Params;\n  seq: number;\n}\n\nexport default class PermalinkPrinter extends Component<OwnProps, any> {\n  public render() {\n    let rlpBytes = null;\n    try {\n      rlpBytes = paramsToRLPBytes({\n        params: this.props.params,\n        seq: this.props.seq,\n      }).toString(\"hex\");\n    } catch (_err) {\n      rlpBytes = null;\n    }\n\n    return (\n      <Col xs=\"12\" className=\"border rounded px-5 py-3 bg-light text-wrap\">\n        <span>Share</span>\n        <p>\n          <em>Please provide the link below to other stakeholders for signing.</em>\n          <br />\n          {rlpBytes && (\n            <Link to={`/${rlpBytes}`} className=\"overflow-wrap\">\n              {`${window.location.href}${rlpBytes}`}\n            </Link>\n          )}\n        </p>\n\n        <p className=\"overflow-wrap mt-1\">\n          <em>Please use the below RLP data of the Params to load later:</em>\n          <br />\n          {rlpBytes || \"Invalid Params\"}\n        </p>\n      </Col>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Signature } from \"../types\";\nimport { Col, Form, Button, Row } from \"react-bootstrap\";\n\ninterface OwnProps {\n  signatures: Signature[];\n  onAddSignature: (added: Signature) => void;\n  onRemoveSignature: (removed: Signature) => void;\n}\n\ninterface OwnState {\n  typed: string;\n}\n\nexport default class SignatureCollector extends Component<OwnProps, any> {\n  public constructor(props: OwnProps) {\n    super(props);\n    this.state = {\n      typed: \"\",\n    };\n  }\n\n  public render() {\n    return (\n      <Col xs=\"12\" className=\"border rounded px-5 py-3 bg-light\">\n        <Row>\n          <Col xs=\"12\" className=\"mb-3\">\n            <span>Collect signature</span>\n            <br />\n            <em>Paste signatures from other stake holders to the input box below.</em>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col className=\"mb-3\">\n            <Form.Control\n              type=\"text\"\n              value={this.state.typed}\n              onChange={this.handleInputChange}\n              placeholder=\"Paste signature\"\n            />\n          </Col>\n\n          <Col xs=\"12\" lg=\"3\">\n            <Button variant=\"primary\" onClick={this.handleAddButtonClick}>\n              Collect\n            </Button>\n          </Col>\n        </Row>\n\n        {this.props.signatures.length > 0 && (\n          <>\n            <span>Collected Signatures </span>\n            <ul>\n              {this.props.signatures.map(signature => (\n                <li key={signature} className=\"my-1 overflow-wrap\">\n                  {signature}\n                  <Button\n                    size=\"sm\"\n                    className=\"ml-1\"\n                    name={signature}\n                    onClick={this.handleRemoveClick}\n                    variant=\"outline-primary\"\n                  >\n                    delete\n                  </Button>\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </Col>\n    );\n  }\n\n  private handleRemoveClick = (event: any) => {\n    const toRemove: Signature = event.target.name;\n    this.props.onRemoveSignature(toRemove);\n  };\n\n  private handleInputChange = (event: any) => {\n    const text = event.target.value;\n    this.setState({\n      typed: text,\n    });\n  };\n\n  private handleAddButtonClick = (_event: any) => {\n    if (this.state.typed === \"\") {\n      return;\n    }\n\n    if (this.props.signatures.indexOf(this.state.typed) !== -1) {\n      // FXME: Use custom error window instead of the alert\n      alert(\"Cannot add duplicated signature\");\n      return;\n    }\n\n    this.props.onAddSignature(this.state.typed);\n    this.setState({\n      typed: \"\",\n    });\n  };\n}\n","import React, { Component } from \"react\";\nimport { Params, Signature, paramsAndSignaturesToRLPBytes } from \"../types\";\nimport { Col, Button } from \"react-bootstrap\";\n\ninterface OwnProps {\n  params: Params;\n  seq: number;\n  signatures: Signature[];\n}\n\ninterface OwnState {\n  paramsAndSignatures: string | null;\n}\n\nexport default class TransactionCreator extends Component<OwnProps, OwnState> {\n  public constructor(props: OwnProps) {\n    super(props);\n    this.state = {\n      paramsAndSignatures: null,\n    };\n  }\n\n  public render() {\n    return (\n      <Col xs=\"12\" className=\"border rounded px-5 py-3 bg-light\">\n        <div className=\"mb-3\">\n          <span>\n            Create Transaction\n            <br />\n            <em>\n              If you collected enough signatures, press the button below to create\n              ChangeCommonParams transaction.\n            </em>\n          </span>\n        </div>\n\n        <Button onClick={this.handleClick} className=\"mb-3\">\n          {\" \"}\n          Create Transaction{\" \"}\n        </Button>\n\n        {this.state.paramsAndSignatures && (\n          <p className=\"overflow-wrap\">\n            <em>Transaction is created.</em>\n            <br />\n            <em>Please use the encoded paramsAndSignatures in the stakeholder SDK.</em>\n            <br />\n            <br />\n            <span>{this.state.paramsAndSignatures}</span>\n          </p>\n        )}\n      </Col>\n    );\n  }\n\n  private handleClick = (_event: any) => {\n    const rlpBytes = paramsAndSignaturesToRLPBytes(\n      {\n        params: this.props.params,\n        seq: this.props.seq,\n      },\n      this.props.signatures,\n    );\n    this.setState({\n      paramsAndSignatures: rlpBytes.toString(\"hex\"),\n    });\n  };\n}\n","import React, { Component } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\nimport ParamsEditor from \"./Components/ParamsEditor\";\nimport { RLPBytesToParams } from \"./types\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport { blake256 } from \"codechain-primitives\";\nimport * as RLP from \"rlp\";\n\ntype Props = RouteComponentProps;\n\nclass Viewer extends Component<Props> {\n  public render() {\n    const encodedParams = (this.props.match.params as any).encodedParams;\n    const paramsAndSeq = RLPBytesToParams(encodedParams);\n    return (\n      <Container>\n        <Row className=\"mt-5\">\n          <ParamsEditor paramsAndSeq={paramsAndSeq} onChangeParamsAndSeq={this.noOp} disabled />\n        </Row>\n        <Row className=\"mb-5 mt-3\">\n          <Col xs={12} className=\"border rounded px-5 py-3 bg-light overflow-wrap\">\n            Encoded Params: {encodedParams}\n            <br />\n            <br />\n            Hash of the Params: {blake256(RLP.encode(encodedParams).toString(\"hex\"))}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  private noOp() {}\n}\n\nexport default withRouter(Viewer);\n","import React from \"react\";\nimport ParamsLoader from \"./Components/ParamsLoader\";\nimport ParamsEditor from \"./Components/ParamsEditor\";\nimport PermalinkPrinter from \"./Components/PermalinkPrinter\";\nimport SignatureCollector from \"./Components/SignatureCollector\";\nimport TransactionCreator from \"./Components/TransactionCreator\";\nimport { Params, defaultParams, Signature, ParamsAndSeq } from \"./types\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { Route } from \"react-router-dom\";\nimport Viewer from \"./Viewer\";\n\ntype AppState = {\n  seq: number;\n  params: Params;\n  signatures: Signature[];\n  // The `paramsEditorKey` is changed when the params and seq are updated from the loader.\n  // New ParamsEditor will be created if the paramsEditorKey is changed.\n  paramsEditorKey: number;\n};\n\nexport default class App extends React.Component<{}, AppState> {\n  public constructor(props: any) {\n    super(props);\n\n    this.state = {\n      seq: 0,\n      params: defaultParams(),\n      paramsEditorKey: 0,\n      signatures: [],\n    };\n  }\n\n  public render() {\n    return (\n      <>\n        <Route exact path={\"/\"} component={this.Index} />\n        <Route path={\"/:encodedParams\"} component={Viewer} />\n      </>\n    );\n  }\n\n  private Index = () => {\n    return (\n      <Container>\n        <h1 className=\"mt-3\">CodeChain Change Common Params</h1>\n        <Row className=\"mt-1\">\n          <ParamsLoader onLoadParamsAndSeq={this.handleLoadParamsAndSeq} />\n        </Row>\n        <Row className=\"mt-3\">\n          <ParamsEditor\n            key={this.state.paramsEditorKey}\n            paramsAndSeq={{ params: this.state.params, seq: this.state.seq }}\n            onChangeParamsAndSeq={this.handleChangeParamsAndSeq}\n          />\n        </Row>\n        <Row className=\"mt-3\">\n          <PermalinkPrinter params={this.state.params} seq={this.state.seq} />\n        </Row>\n        <Row className=\"mt-3\">\n          <SignatureCollector\n            signatures={this.state.signatures}\n            onAddSignature={this.handleAddSignature}\n            onRemoveSignature={this.handleRemoveSignature}\n          />\n        </Row>\n        <Row className=\"mt-3 mb-5\">\n          {/* The key props reset the TransactionCreator component when the signatures state is changed. */}\n          <TransactionCreator\n            params={this.state.params}\n            seq={this.state.seq}\n            signatures={this.state.signatures}\n            key={this.state.signatures.join(\"-\")}\n          />\n        </Row>\n      </Container>\n    );\n  };\n\n  private handleLoadParamsAndSeq = ({ params, seq }: ParamsAndSeq) => {\n    this.setState({\n      params,\n      seq,\n      paramsEditorKey: Math.random(),\n    });\n  };\n\n  private handleChangeParamsAndSeq = (changedParamsAndSeq: ParamsAndSeq) => {\n    this.setState({\n      params: changedParamsAndSeq.params,\n      seq: changedParamsAndSeq.seq,\n    });\n  };\n\n  private handleAddSignature = (signature: Signature) => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        signatures: [...prevState.signatures, signature],\n      };\n    });\n  };\n\n  private handleRemoveSignature = (toRemove: Signature) => {\n    this.setState(prevState => {\n      const newSignatures = [...prevState.signatures];\n      const index = prevState.signatures.indexOf(toRemove);\n      newSignatures.splice(index, 1);\n      return {\n        ...prevState,\n        signatures: newSignatures,\n      };\n    });\n  };\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}