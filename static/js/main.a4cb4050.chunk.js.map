{"version":3,"sources":["types.ts","Components/ParamsLoader.tsx","Components/ParamsEditor.tsx","Components/PermalinkPrinter.tsx","Components/SignatureCollector.tsx","Components/TransactionCreator.tsx","Viewer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ParamsKeys","defaultParams","maxExtraDataSize","maxAssetSchemeMetadataSize","maxTransferMetadataSize","maxTextContentSize","networkId","minPayTransactionCost","minSetRegularKeyTransactionCost","minCreateShardTransactionCost","minSetShardOwnersTransactionCost","minSetShardUsersTransactionCost","minWrapCccTransactionCost","minCustomTransactionCost","minStoreTransactionCost","minRemoveTransactionCost","minAssetMintCost","minAssetTransferCost","minAssetSchemeChangeCost","minAssetSupplyIncreaseCost","minAssetComposeCost","minAssetDecomposeCost","minAssetUnwrapCccCost","maxBodySize","snapshotPeriod","termSeconds","nominationExpiration","custodyPeriod","releasePeriod","maxNumOfValidators","minNumOfValidators","delegationThreshold","minDeposit","paramsToRLPBytes","params","RLP","concat","Object","_Users_juhyeong_code_kodebox_codechain_parameter_changer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","map","key","U64","ensure","rlpBytes","paramsAndSignaturesToRLPBytes","signatures","rlpToU64","value","debugFieldName","length","fromBytes","err","newError","Error","original","RLPBytesToParams","hex","decoded","Buffer","toString","_decoded","_Users_juhyeong_code_kodebox_codechain_parameter_changer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","maxExtraDataSizeRaw","maxAssetSchemeMetadataSizeRaw","maxTransferMetadataSizeRaw","maxTextContentSizeRaw","networkIdRaw","minPayTransactionCostRaw","minSetRegularKeyTransactionCostRaw","minCreateShardTransactionCostRaw","minSetShardOwnersTransactionCostRaw","minSetShardUsersTransactionCostRaw","minWrapCccTransactionCostRaw","minCustomTransactionCostRaw","minStoreTransactionCostRaw","minRemoveTransactionCostRaw","minAssetMintCostRaw","minAssetTransferCostRaw","minAssetSchemeChangeCostRaw","minAssetSupplyIncreaseCostRaw","minAssetComposeCostRaw","minAssetDecomposeCostRaw","minAssetUnwrapCccCostRaw","maxBodySizeRaw","snapshotPeriodRaw","termSecondsRaw","nominationExpirationRaw","custodyPeriodRaw","releasePeriodRaw","maxNumOfValidatorsRaw","minNumOfValidatorsRaw","delegationThresholdRaw","minDepositRaw","ParamsLoader","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","text","target","setState","typed","handleClick","_event","rawParams","state","newParams","onLoadParams","console","error","alert","react_default","a","createElement","Col","xs","className","Row","lg","Form","Control","type","onChange","placeholder","Button","onClick","variant","Component","ParamsEditor","objectSpread","defineProperty","onChangeParams","_this2","disabled","Group","Label","column","String","defaultProps","PermalinkPrinter","_err","react_router_dom","to","window","location","href","SignatureCollector","handleRemoveClick","toRemove","name","onRemoveSignature","handleAddButtonClick","indexOf","onAddSignature","Fragment","signature","size","TransactionCreator","transaction","SDK","server","core","createCustomTransaction","handlerId","bytes","setSeq","setFee","Viewer","encodedParams","match","Container","Components_ParamsEditor","noOp","blake256","withRouter","App","Index","ParamsLoader_ParamsLoader","handleLoadParams","handleChangeParams","PermalinkPrinter_PermalinkPrinter","SignatureCollector_SignatureCollector","handleAddSignature","handleRemoveSignature","TransactionCreator_TransactionCreator","join","changedParams","prevState","toConsumableArray","newSignatures","index","splice","react_router","exact","path","component","React","Boolean","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4cb4050.chunk.js","sourcesContent":["import { U64Value, U64 } from \"codechain-primitives\";\nimport * as RLP from \"rlp\";\n\nexport type NetworkId = string;\n\nexport interface Params {\n  maxExtraDataSize: U64Value;\n  maxAssetSchemeMetadataSize: U64Value;\n  maxTransferMetadataSize: U64Value;\n  maxTextContentSize: U64Value;\n  networkId: NetworkId;\n  minPayTransactionCost: U64Value;\n  minSetRegularKeyTransactionCost: U64Value;\n  minCreateShardTransactionCost: U64Value;\n  minSetShardOwnersTransactionCost: U64Value;\n  minSetShardUsersTransactionCost: U64Value;\n  minWrapCccTransactionCost: U64Value;\n  minCustomTransactionCost: U64Value;\n  minStoreTransactionCost: U64Value;\n  minRemoveTransactionCost: U64Value;\n  minAssetMintCost: U64Value;\n  minAssetTransferCost: U64Value;\n  minAssetSchemeChangeCost: U64Value;\n  minAssetSupplyIncreaseCost: U64Value;\n  minAssetComposeCost: U64Value;\n  minAssetDecomposeCost: U64Value;\n  minAssetUnwrapCccCost: U64Value;\n  maxBodySize: U64Value;\n  snapshotPeriod: U64Value;\n  termSeconds: U64Value;\n  nominationExpiration: U64Value;\n  custodyPeriod: U64Value;\n  releasePeriod: U64Value;\n  maxNumOfValidators: U64Value;\n  minNumOfValidators: U64Value;\n  delegationThreshold: U64Value;\n  minDeposit: U64Value;\n}\n\nexport const ParamsKeys: (keyof Params)[] = [\n  \"maxExtraDataSize\",\n  \"maxAssetSchemeMetadataSize\",\n  \"maxTransferMetadataSize\",\n  \"maxTextContentSize\",\n  \"networkId\",\n  \"minPayTransactionCost\",\n  \"minSetRegularKeyTransactionCost\",\n  \"minCreateShardTransactionCost\",\n  \"minSetShardOwnersTransactionCost\",\n  \"minSetShardUsersTransactionCost\",\n  \"minWrapCccTransactionCost\",\n  \"minCustomTransactionCost\",\n  \"minStoreTransactionCost\",\n  \"minRemoveTransactionCost\",\n  \"minAssetMintCost\",\n  \"minAssetTransferCost\",\n  \"minAssetSchemeChangeCost\",\n  \"minAssetSupplyIncreaseCost\",\n  \"minAssetComposeCost\",\n  \"minAssetDecomposeCost\",\n  \"minAssetUnwrapCccCost\",\n  \"maxBodySize\",\n  \"snapshotPeriod\",\n  \"termSeconds\",\n  \"nominationExpiration\",\n  \"custodyPeriod\",\n  \"releasePeriod\",\n  \"maxNumOfValidators\",\n  \"minNumOfValidators\",\n  \"delegationThreshold\",\n  \"minDeposit\",\n];\n\nexport function defaultParams(): Params {\n  // FIXME: use the real default value.\n  return {\n    maxExtraDataSize: 0x20,\n    maxAssetSchemeMetadataSize: 0x400,\n    maxTransferMetadataSize: 0x100,\n    maxTextContentSize: 0x200,\n    networkId: \"tc\",\n    minPayTransactionCost: 100,\n    minSetRegularKeyTransactionCost: 10000,\n    minCreateShardTransactionCost: 1000000,\n    minSetShardOwnersTransactionCost: 100000,\n    minSetShardUsersTransactionCost: 10000,\n    minWrapCccTransactionCost: 100000,\n    minCustomTransactionCost: 0,\n    minStoreTransactionCost: 5000,\n    minRemoveTransactionCost: 5000,\n    minAssetMintCost: 100000,\n    minAssetTransferCost: 100,\n    minAssetSchemeChangeCost: 100000,\n    minAssetSupplyIncreaseCost: 100000,\n    minAssetComposeCost: 100000,\n    minAssetDecomposeCost: 100000,\n    minAssetUnwrapCccCost: 100,\n    maxBodySize: 4194304,\n    snapshotPeriod: 16384,\n    termSeconds: 0,\n    nominationExpiration: 0,\n    custodyPeriod: 0,\n    releasePeriod: 0,\n    maxNumOfValidators: 0,\n    minNumOfValidators: 0,\n    delegationThreshold: 0,\n    minDeposit: 0,\n  };\n}\n\nexport function paramsToRLPBytes(params: Params): Buffer {\n  return RLP.encode([\n    0xff,\n    0,\n    ...ParamsKeys.map(key => {\n      // FIXME: This code would be broken easily when a field is added to the Params.\n      if (key === \"networkId\") {\n        return params[key];\n      } else {\n        return U64.ensure(params[key]).rlpBytes();\n      }\n    }),\n  ]);\n}\n\nexport function paramsAndSignaturesToRLPBytes(params: Params, signatures: Signature[]): Buffer {\n  return RLP.encode([\n    0xff,\n    0,\n    ...ParamsKeys.map(key => {\n      // FIXME: This code would be broken easily when a field is added to the Params.\n      if (key === \"networkId\") {\n        return params[key];\n      } else {\n        return U64.ensure(params[key]).rlpBytes();\n      }\n    }),\n    ...signatures,\n  ]);\n}\n\nfunction rlpToU64(value: Buffer, debugFieldName: string) {\n  try {\n    if (value.length === 0) {\n      return new U64(0);\n    } else {\n      return U64.fromBytes(value);\n    }\n  } catch (err) {\n    const newError = new Error(`Failed to decode ${debugFieldName}`);\n    (newError as any).original = err;\n    throw newError;\n  }\n}\n\nexport function RLPBytesToParams(hex: string): Params {\n  const decoded: Buffer[] = RLP.decode(new Buffer(hex, \"hex\")) as any;\n\n  if (decoded.length !== ParamsKeys.length + 2) {\n    throw new Error(\n      `Invalid RLP: length of the input: ${decoded.length} should be ${ParamsKeys.length + 2}`,\n    );\n  }\n\n  if (decoded[0].toString(\"hex\") !== \"ff\") {\n    throw new Error(`Invalid format:  expected: \"ff\" but found ${decoded[0].toString(\"hex\")}`);\n  }\n  if (decoded[1].length !== 0) {\n    throw new Error(`Invalid format`);\n  }\n  const [\n    ,\n    ,\n    maxExtraDataSizeRaw,\n    maxAssetSchemeMetadataSizeRaw,\n    maxTransferMetadataSizeRaw,\n    maxTextContentSizeRaw,\n    networkIdRaw,\n    minPayTransactionCostRaw,\n    minSetRegularKeyTransactionCostRaw,\n    minCreateShardTransactionCostRaw,\n    minSetShardOwnersTransactionCostRaw,\n    minSetShardUsersTransactionCostRaw,\n    minWrapCccTransactionCostRaw,\n    minCustomTransactionCostRaw,\n    minStoreTransactionCostRaw,\n    minRemoveTransactionCostRaw,\n    minAssetMintCostRaw,\n    minAssetTransferCostRaw,\n    minAssetSchemeChangeCostRaw,\n    minAssetSupplyIncreaseCostRaw,\n    minAssetComposeCostRaw,\n    minAssetDecomposeCostRaw,\n    minAssetUnwrapCccCostRaw,\n    maxBodySizeRaw,\n    snapshotPeriodRaw,\n    termSecondsRaw,\n    nominationExpirationRaw,\n    custodyPeriodRaw,\n    releasePeriodRaw,\n    maxNumOfValidatorsRaw,\n    minNumOfValidatorsRaw,\n    delegationThresholdRaw,\n    minDepositRaw,\n  ] = decoded;\n\n  return {\n    maxExtraDataSize: rlpToU64(maxExtraDataSizeRaw, \"maxExtraDataSize\"),\n    maxAssetSchemeMetadataSize: rlpToU64(\n      maxAssetSchemeMetadataSizeRaw,\n      \"maxAssetSchemeMetadataSize\",\n    ),\n    maxTransferMetadataSize: rlpToU64(maxTransferMetadataSizeRaw, \"maxTransferMetadataSize\"),\n    maxTextContentSize: rlpToU64(maxTextContentSizeRaw, \"maxTextContentSize\"),\n    networkId: networkIdRaw.toString(\"ascii\"),\n    minPayTransactionCost: rlpToU64(minPayTransactionCostRaw, \"minPayTransactionCost\"),\n    minSetRegularKeyTransactionCost: rlpToU64(\n      minSetRegularKeyTransactionCostRaw,\n      \"minSetRegularKeyTransactionCost\",\n    ),\n    minCreateShardTransactionCost: rlpToU64(\n      minCreateShardTransactionCostRaw,\n      \"minCreateShardTransactionCost\",\n    ),\n    minSetShardOwnersTransactionCost: rlpToU64(\n      minSetShardOwnersTransactionCostRaw,\n      \"minSetShardOwnersTransactionCost\",\n    ),\n    minSetShardUsersTransactionCost: rlpToU64(\n      minSetShardUsersTransactionCostRaw,\n      \"minSetShardUsersTransactionCost\",\n    ),\n    minWrapCccTransactionCost: rlpToU64(minWrapCccTransactionCostRaw, \"minWrapCccTransactionCost\"),\n    minCustomTransactionCost: rlpToU64(minCustomTransactionCostRaw, \"minCustomTransactionCost\"),\n    minStoreTransactionCost: rlpToU64(minStoreTransactionCostRaw, \"minStoreTransactionCost\"),\n    minRemoveTransactionCost: rlpToU64(minRemoveTransactionCostRaw, \"minRemoveTransactionCost\"),\n    minAssetMintCost: rlpToU64(minAssetMintCostRaw, \"minAssetMintCost\"),\n    minAssetTransferCost: rlpToU64(minAssetTransferCostRaw, \"minAssetTransferCost\"),\n    minAssetSchemeChangeCost: rlpToU64(minAssetSchemeChangeCostRaw, \"minAssetSchemeChangeCost\"),\n    minAssetSupplyIncreaseCost: rlpToU64(\n      minAssetSupplyIncreaseCostRaw,\n      \"minAssetSupplyIncreaseCost\",\n    ),\n    minAssetComposeCost: rlpToU64(minAssetComposeCostRaw, \"minAssetComposeCost\"),\n    minAssetDecomposeCost: rlpToU64(minAssetDecomposeCostRaw, \"minAssetDecomposeCost\"),\n    minAssetUnwrapCccCost: rlpToU64(minAssetUnwrapCccCostRaw, \"minAssetUnwrapCccCost\"),\n    maxBodySize: rlpToU64(maxBodySizeRaw, \"maxBodySize\"),\n    snapshotPeriod: rlpToU64(snapshotPeriodRaw, \"snapshotPeriod\"),\n    termSeconds: rlpToU64(termSecondsRaw, \"termSeconds\"),\n    nominationExpiration: rlpToU64(nominationExpirationRaw, \"nominationExpiration\"),\n    custodyPeriod: rlpToU64(custodyPeriodRaw, \"custodyPeriod\"),\n    releasePeriod: rlpToU64(releasePeriodRaw, \"releasePeriod\"),\n    maxNumOfValidators: rlpToU64(maxNumOfValidatorsRaw, \"maxNumOfValidators\"),\n    minNumOfValidators: rlpToU64(minNumOfValidatorsRaw, \"minNumOfValidators\"),\n    delegationThreshold: rlpToU64(delegationThresholdRaw, \"delegationThreshold\"),\n    minDeposit: rlpToU64(minDepositRaw, \"minDeposit\"),\n  };\n}\n\nexport type Signature = string;\n","import React, { Component } from \"react\";\nimport { Params, RLPBytesToParams } from \"../types\";\nimport { Col, Form, Button, Row } from \"react-bootstrap\";\n\ninterface OwnProps {\n  onLoadParams: (params: Params) => void;\n}\n\ninterface OwnState {\n  typed: string;\n}\n\nexport default class ParamsLoader extends Component<OwnProps, OwnState> {\n  public constructor(props: OwnProps) {\n    super(props);\n    this.state = {\n      typed: \"\",\n    };\n  }\n\n  public render() {\n    return (\n      <Col xs=\"12\" className=\"border rounded px-5 py-3 bg-light\">\n        <Row>\n          <span className=\"col-12 col-lg-12 mb-3\">Load params from RLP Encoded Data</span>\n          <Col xs=\"12\" lg=\"9\" className=\"mb-3\">\n            <Form.Control\n              type=\"text\"\n              value={this.state.typed}\n              onChange={this.handleInputChange}\n              placeholder=\"Paste RLP encoded data of the Common Params\"\n            />\n          </Col>\n          <Col xs=\"12\" lg=\"3\">\n            <Button onClick={this.handleClick} variant=\"primary\">\n              Import\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    );\n  }\n\n  private handleInputChange = (event: any) => {\n    const text = event.target.value;\n    this.setState({\n      typed: text,\n    });\n  };\n\n  private handleClick = (_event: any) => {\n    const rawParams = this.state.typed;\n\n    try {\n      const newParams = RLPBytesToParams(rawParams);\n      this.props.onLoadParams(newParams);\n    } catch (err) {\n      console.error(err);\n      // FIXME: show the error message in the page.\n      alert(err);\n    }\n  };\n}\n","import React, { Component, FormEvent } from \"react\";\nimport { Params, ParamsKeys } from \"../types\";\nimport { Row, Col, Form } from \"react-bootstrap\";\n\ninterface OwnParams {\n  params: Params;\n  onChangeParams: (changedParams: Params) => void;\n  disabled?: boolean;\n}\n\nclass ParamsEditor extends Component<OwnParams, any> {\n  public render() {\n    return (\n      <Col xs={12} className=\"border rounded px-5 py-3 bg-light\">\n        <Row>\n          <Col xs={12}>\n            {this.props.disabled || (\n              <span>\n                Edit Params\n                <br />\n                <em>Change parameters as you want</em>\n              </span>\n            )}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <Form className=\"row\">\n              {ParamsKeys.map(key => {\n                return (\n                  <Form.Group key={key} className=\"col-12 col-lg-6 row\">\n                    <Form.Label className=\"col-12 col-lg-8\" column>\n                      {key}\n                    </Form.Label>\n                    <Col xs={\"12\"} lg={\"4\"}>\n                      <Form.Control\n                        type=\"text\"\n                        value={String(this.props.params[key])}\n                        onChange={(event: any) => this.handleInputChange(key, event)}\n                        disabled={this.props.disabled}\n                      />\n                    </Col>\n                  </Form.Group>\n                );\n              })}\n            </Form>\n          </Col>\n        </Row>\n      </Col>\n    );\n  }\n\n  private handleInputChange = (key: keyof Params, event: FormEvent) => {\n    const text = (event.target as HTMLInputElement).value;\n    const newParams = {\n      ...this.props.params,\n      [key]: text,\n    };\n    this.props.onChangeParams(newParams);\n  };\n}\n\n(ParamsEditor as any).defaultProps = {\n  disabled: false,\n};\n\nexport default ParamsEditor;\n","import React, { Component } from \"react\";\nimport { Params, paramsToRLPBytes } from \"../types\";\nimport { Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\ninterface OwnProps {\n  params: Params;\n}\n\nexport default class PermalinkPrinter extends Component<OwnProps, any> {\n  public render() {\n    let rlpBytes = null;\n    try {\n      rlpBytes = paramsToRLPBytes(this.props.params).toString(\"hex\");\n    } catch (_err) {\n      rlpBytes = null;\n    }\n\n    return (\n      <Col xs=\"12\" className=\"border rounded px-5 py-3 bg-light text-wrap\">\n        <span>Share</span>\n        <p>\n          <em>Please provide the link below to other stakeholders for signing.</em>\n          <br />\n          {rlpBytes && (\n            <Link to={`/${rlpBytes}`} className=\"overflow-wrap\">\n              {`${window.location.href}${rlpBytes}`}\n            </Link>\n          )}\n        </p>\n\n        <p className=\"overflow-wrap mt-1\">\n          <em>Please use the below RLP data of the Params to load later:</em>\n          <br />\n          {rlpBytes || \"Invalid Params\"}\n        </p>\n      </Col>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Signature } from \"../types\";\nimport { Col, Form, Button, Row } from \"react-bootstrap\";\n\ninterface OwnProps {\n  signatures: Signature[];\n  onAddSignature: (added: Signature) => void;\n  onRemoveSignature: (removed: Signature) => void;\n}\n\ninterface OwnState {\n  typed: string;\n}\n\nexport default class SignatureCollector extends Component<OwnProps, any> {\n  public constructor(props: OwnProps) {\n    super(props);\n    this.state = {\n      typed: \"\",\n    };\n  }\n\n  public render() {\n    return (\n      <Col xs=\"12\" className=\"border rounded px-5 py-3 bg-light\">\n        <Row>\n          <Col xs=\"12\" className=\"mb-3\">\n            <span>Collect signature</span>\n            <br />\n            <em>Paste signatures from other stake holders to the input box below.</em>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col className=\"mb-3\">\n            <Form.Control\n              type=\"text\"\n              value={this.state.typed}\n              onChange={this.handleInputChange}\n              placeholder=\"Paste signature\"\n            />\n          </Col>\n\n          <Col xs=\"12\" lg=\"3\">\n            <Button variant=\"primary\" onClick={this.handleAddButtonClick}>\n              Collect\n            </Button>\n          </Col>\n        </Row>\n\n        {this.props.signatures.length > 0 && (\n          <>\n            <span>Collected Signatures </span>\n            <ul>\n              {this.props.signatures.map(signature => (\n                <li key={signature} className=\"my-1 overflow-wrap\">\n                  {signature}\n                  <Button\n                    size=\"sm\"\n                    className=\"ml-1\"\n                    name={signature}\n                    onClick={this.handleRemoveClick}\n                    variant=\"outline-primary\"\n                  >\n                    delete\n                  </Button>\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </Col>\n    );\n  }\n\n  private handleRemoveClick = (event: any) => {\n    const toRemove: Signature = event.target.name;\n    this.props.onRemoveSignature(toRemove);\n  };\n\n  private handleInputChange = (event: any) => {\n    const text = event.target.value;\n    this.setState({\n      typed: text,\n    });\n  };\n\n  private handleAddButtonClick = (_event: any) => {\n    if (this.state.typed === \"\") {\n      return;\n    }\n\n    if (this.props.signatures.indexOf(this.state.typed) !== -1) {\n      // FXME: Use custom error window instead of the alert\n      alert(\"Cannot add duplicated signature\");\n      return;\n    }\n\n    this.props.onAddSignature(this.state.typed);\n    this.setState({\n      typed: \"\",\n    });\n  };\n}\n","import React, { Component } from \"react\";\nimport { Params, Signature, paramsAndSignaturesToRLPBytes } from \"../types\";\nimport { Col, Button } from \"react-bootstrap\";\nimport { SDK } from \"codechain-sdk\";\n\ninterface OwnProps {\n  params: Params;\n  signatures: Signature[];\n}\n\ninterface OwnState {\n  transaction: string | null;\n}\n\nexport default class TransactionCreator extends Component<OwnProps, any> {\n  public constructor(props: OwnProps) {\n    super(props);\n    this.state = {\n      transaction: null,\n    };\n  }\n\n  public render() {\n    return (\n      <Col xs=\"12\" className=\"border rounded px-5 py-3 bg-light\">\n        <div className=\"mb-3\">\n          <span>\n            Create Transaction\n            <br />\n            <em>\n              If you collected enough signatures, press the button below to create\n              ChangeCommonParams transaction.\n            </em>\n          </span>\n        </div>\n\n        <Button onClick={this.handleClick} className=\"mb-3\">\n          {\" \"}\n          Create Transaction{\" \"}\n        </Button>\n\n        {this.state.transaction && (\n          <p className=\"overflow-wrap\">\n            <em>Transaction is created.</em>\n            <br />\n            <em>Please use the encoded transaction in the stakeholder SDK.</em>\n            <br />\n            <br />\n            <span>{this.state.transaction}</span>\n          </p>\n        )}\n      </Col>\n    );\n  }\n\n  private handleClick = (_event: any) => {\n    const rlpBytes = paramsAndSignaturesToRLPBytes(this.props.params, this.props.signatures);\n    const sdk = new SDK({\n      // Use meaningless URL to create a instance of the SDK.\n      server: \"http://dummy.codechain.io\",\n    });\n    const transaction = sdk.core.createCustomTransaction({\n      handlerId: 2,\n      bytes: rlpBytes,\n    });\n    // Sequence and fee should be changed by the fee payer.\n    transaction.setSeq(0);\n    transaction.setFee(1);\n    this.setState({\n      transaction: transaction.rlpBytes().toString(\"hex\"),\n    });\n  };\n}\n","import React, { Component } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\nimport ParamsEditor from \"./Components/ParamsEditor\";\nimport { RLPBytesToParams } from \"./types\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport { blake256 } from \"codechain-primitives\";\nimport * as RLP from \"rlp\";\n\ntype Props = RouteComponentProps;\n\nclass Viewer extends Component<Props> {\n  render() {\n    const encodedParams = (this.props.match.params as any).encodedParams;\n    const params = RLPBytesToParams(encodedParams);\n    return (\n      <Container>\n        <Row className=\"mt-5\">\n          <ParamsEditor params={params} onChangeParams={this.noOp} disabled />\n        </Row>\n        <Row className=\"mb-5 mt-3\">\n          <Col xs={12} className=\"border rounded px-5 py-3 bg-light overflow-wrap\">\n            Encoded Params: {encodedParams}\n            <br />\n            <br />\n            Hash of the Params: {blake256(RLP.encode(encodedParams).toString(\"hex\"))}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  private noOp() {}\n}\n\nexport default withRouter(Viewer);\n","import React from \"react\";\nimport ParamsLoader from \"./Components/ParamsLoader\";\nimport ParamsEditor from \"./Components/ParamsEditor\";\nimport PermalinkPrinter from \"./Components/PermalinkPrinter\";\nimport SignatureCollector from \"./Components/SignatureCollector\";\nimport TransactionCreator from \"./Components/TransactionCreator\";\nimport { Params, defaultParams, Signature } from \"./types\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { Route } from \"react-router-dom\";\nimport Viewer from \"./Viewer\";\n\ntype AppState = {\n  params: Params;\n  signatures: Signature[];\n};\n\nexport default class App extends React.Component<{}, AppState> {\n  public constructor(props: any) {\n    super(props);\n\n    this.state = {\n      params: defaultParams(),\n      signatures: [],\n    };\n  }\n\n  public render() {\n    return (\n      <>\n        <Route exact path={\"/\"} component={this.Index} />\n        <Route path={\"/:encodedParams\"} component={Viewer} />\n      </>\n    );\n  }\n\n  private Index = () => {\n    return (\n      <Container>\n        <h1 className=\"mt-3\">Change Common Params</h1>\n        <Row className=\"mt-1\">\n          <ParamsLoader onLoadParams={this.handleLoadParams} />\n        </Row>\n        <Row className=\"mt-3\">\n          <ParamsEditor params={this.state.params} onChangeParams={this.handleChangeParams} />\n        </Row>\n        <Row className=\"mt-3\">\n          <PermalinkPrinter params={this.state.params} />\n        </Row>\n        <Row className=\"mt-3\">\n          <SignatureCollector\n            signatures={this.state.signatures}\n            onAddSignature={this.handleAddSignature}\n            onRemoveSignature={this.handleRemoveSignature}\n          />\n        </Row>\n        <Row className=\"mt-3 mb-5\">\n          {/* The key props reset the TransactionCreator component when the signatures state is changed. */}\n          <TransactionCreator\n            params={this.state.params}\n            signatures={this.state.signatures}\n            key={this.state.signatures.join(\"-\")}\n          />\n        </Row>\n      </Container>\n    );\n  };\n\n  private handleLoadParams = (newParams: Params) => {\n    this.setState({\n      params: newParams,\n    });\n  };\n\n  private handleChangeParams = (changedParams: Params) => {\n    this.setState({\n      params: changedParams,\n    });\n  };\n\n  private handleAddSignature = (signature: Signature) => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        signatures: [...prevState.signatures, signature],\n      };\n    });\n  };\n\n  private handleRemoveSignature = (toRemove: Signature) => {\n    this.setState(prevState => {\n      const newSignatures = [...prevState.signatures];\n      const index = prevState.signatures.indexOf(toRemove);\n      newSignatures.splice(index, 1);\n      return {\n        ...prevState,\n        signatures: newSignatures,\n      };\n    });\n  };\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}